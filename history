;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(buffer-name-history regexp-search-ring locate-history-list command-history face-name-history imenu--history-list read-expression-history ido-buffer-history ido-file-history minibuffer-history))
(setq buffer-name-history '("*Packages*" "*Help*" "tutorial_client/behavior.clj" "test/behavior.clj"))
(setq regexp-search-ring '("magit" "textmate" "fuzzy" "fuzzy-mat" "fuzzy"))
(setq locate-history-list '("behav" "behavior.clj" "behaviour.clj" "beha*.clj" "behaviour"))
(setq command-history '((list-packages nil) (customize-group "package") (list-packages nil) (find-file "/Users/david/projects/clojure/listcasts/webdev/LICENSE") (list-packages nil) (find-file "/Users/david/projects/clojure/enlive-tutorial/src/tutorial/utils.clj") (find-file "/Users/david/projects/clojure/enlive-tutorial/src/tutorial/external.clj") (find-file "/Users/david/projects/clojure/enlive-tutorial/src/tutorial/template1.clj") (find-file "/Users/david/projects/clojure/enlive-tutorial/src/tutorial/get-clojure-example.clj") (center-line nil) (help) (find-file "/Users/david/projects/clojure/enlive-tutorial/src/tutorial/scrape1.clj") (magit-status "/Users/david/projects/clojure/session/") (list-packages nil) (find-file "/Users/david/projects/clojure/session/src/clj/session/user.clj") (list-packages nil) (switch-to-buffer "*Packages*") (switch-to-buffer "*Help*" nil 'force-same-window) (list-packages nil) (switch-to-buffer "tutorial_client/behavior.clj") (list-packages nil) (locate "behav" nil nil) (switch-to-buffer "test/behavior.clj") (find-file "/Users/david/projects/clojure/pedestal-projects/app-tutorial/tutorial-client/app/src/tutorial_client/behavior.clj") (locate "behavior.clj" nil nil) (locate "behaviour.clj" nil nil) (locate "beha*.clj" nil nil) (locate "behaviour" nil nil) (switch-to-buffer "behavior.clj") (customize-group "uniquify") (customize-group "uniquify")))
(setq face-name-history '("default"))
(setq imenu--history-list '(#("render-template" 0 15 (fontified t))))
(setq ido-buffer-history '("*Packages*" nil "tutorial_client/behavior.clj" "test/behavior.clj" "behavior.clj" "template3.clj" "*cider-repl enlive-tutorial*" "start.cljs" "*cider-repl tutorial-client*" "*Messages*" "*nrepl-server tutorial-client*" "*cider-repl tutorial-client*"))
(setq ido-file-history '("LICENSE" "utils.clj" "external.clj" "template1.clj" "get-clojure-example.clj" "scrape1.clj" "user.clj" "behavior.clj" "services.cljs" "rendering.cljs" "start.cljs" "behavior.clj" "start.cljs" "rendering.cljs" "template3.clj" "start.cljs" "behavior.clj" "start.cljs" "behavior.clj"))
(setq minibuffer-history '("list-packages" "package" "customize-group" "list-packages" "center-line" "help" "magit-status" "list-packages" "locate" "uniquify" "customize-group" "uniquify" "customize-group" "uniquify" "customize-group" "uniquify" "customize-group" "customize" "ido-mode" "clean-buffer-list" "cider-mode" "list-packages" "package-install" "cider-mode" "imenu" "text-scale-decrease" "apropos" "imenu" "render-template" "customize"))
